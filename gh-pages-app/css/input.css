@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    html,
    body {
        @apply bg-[#fdfdfd] text-black;
    }

    html.dark,
    body.dark {
        @apply bg-[#0a0a0a] text-white;
    }
}

.navbar {
    margin-bottom: 2%;
}

.cell-fill-animation {
    animation: onTypeCell linear;
    animation-duration: 0.35s;
}

.cell-reveal {
    animation-duration: 0.35s;
    animation-timing-function: linear;
    animation-fill-mode: backwards;
}

.cell-reveal.absent {
    animation-name: revealAbsentCharCell;
}

.cell-reveal.correct {
    animation-name: revealCorrectCharCell;
}

.cell-reveal.present {
    animation-name: revealPresentCharCell;
}

.cell-reveal > .letter-container {
    animation: offsetLetterFlip 0.35s linear;
    animation-fill-mode: backwards;
}

.shadowed {
    text-shadow: 1px 1px 1px #000000;
}

.jiggle {
    animation: jiggle linear;
    animation-duration: var(--animation-speed-fast);
}

svg.cursor-pointer {
    transition: all var(--animation-speed-fast);
}

svg.cursor-pointer:hover {
    transform: scale(1.2);
}

@keyframes revealAbsentCharCell {
    0% {
        transform: rotateX(0deg);
        background-color: var(--default-cell-bg-color);
        border-color: var(--default-cell-border-color);
        color: var(--default-cell-text-color);
    }
    50% {
        background-color: var(--default-cell-bg-color);
        border-color: var(--default-cell-border-color);
        color: var(--default-cell-text-color);
    }
    50.1% {
        background-color: var(--absent-cell-bg-color);
        border-color: var(--absent-cell-bg-color);
    }
    100% {
        transform: rotateX(180deg);
    }
}

@keyframes revealCorrectCharCell {
    0% {
        transform: rotateX(0deg);
        background-color: var(--default-cell-bg-color);
        border-color: var(--default-cell-border-color);
        color: var(--default-cell-text-color);
    }
    50% {
        background-color: var(--default-cell-bg-color);
        border-color: var(--default-cell-border-color);
        color: var(--default-cell-text-color);
    }
    50.1% {
        background-color: var(--correct-cell-bg-color);
        border-color: var(--correct-cell-bg-color);
    }
    100% {
        transform: rotateX(180deg);
    }
}

@keyframes revealPresentCharCell {
    0% {
        transform: rotateX(0deg);
        background-color: var(--default-cell-bg-color);
        border-color: var(--default-cell-border-color);
        color: var(--default-cell-text-color);
    }
    50% {
        background-color: var(--default-cell-bg-color);
        border-color: var(--default-cell-border-color);
        color: var(--default-cell-text-color);
    }
    50.1% {
        background-color: var(--present-cell-bg-color);
        border-color: var(--present-cell-bg-color);
    }
    100% {
        transform: rotateX(180deg);
    }
}

/* Additional animation on the child div to avoid letters turning upside down/snapping back to upright visual glitch */
@keyframes offsetLetterFlip {
    0% {
        transform: rotateX(0deg);
    }
    100% {
        transform: rotateX(180deg);
    }
}

@keyframes onTypeCell {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.1);
    }

    100% {
        transform: scale(1);
    }
}

.shadowed {
    text-shadow: 1px 1px 1px #000000;
}

@keyframes jiggle {
    0% {
        transform: translate(0, 0);
    }
    25% {
        transform: translate(-0.5rem, 0);
    }
    50% {
        transform: translate(0.5rem, 0);
    }
    75% {
        transform: translate(-0.5rem, 0);
    }
    100% {
        transform: translate(0, 0);
    }
}

/* Add focus styles */
:focus {
    outline: 1px;
}

/* Styles for the todo-app container */
.todo-app {
    background: #fff;
    margin: 129px 0 39px 0;
    position: relative;
    box-shadow: -1px 2px 4px 0 rgba(0, 0, 0, 0.2),
        -1px 25px 49px 0 rgba(0, 0, 0, 0.1);
}

/* Placeholder styles for input fields */
.todo-app input::-webkit-input-placeholder,
.todo-app input::-moz-placeholder,
.todo-app input::input-placeholder {
    font-style: italic;
    font-weight: 299;
    color: #e6e6e5;
}

/* Styles for the todo-app h1 */
.todo-app h1 {
    position: absolute;
    top: -146px;
    width: 99%;
    font-size: 59px;
    font-weight: 349;
    text-align: center;
    color: rgba(2, 13, 22, 0.479);
}

/* Styles for the new-todo input */
.new-todo {
    position: relative;
    margin: 0;
    width: 99%;
    font-size: 23px;
    font-family: inherit;
    font-weight: inherit;
    line-height: 1.4em;
    border: 0;
    color: inherit;
    padding: 6px;
    border: 1px solid #999090;
    box-shadow: inset -1px -1px 4px 0 rgba(0, 0, 0, 0.2);
    box-sizing: border-box;
}

.new-todo {
    padding: 15px 15px 15px 59px;
    border: none;
    background: rgba(0, 0, 0, 0.003);
    box-shadow: inset -1px -2px 0px rgba(0, 0, 0, 0.03);
}

/* Styles for the todo-list */
.todo-list {
    margin: 0;
    padding: 0;
    list-style: none;
}

/* Styles for todo-list items */
.todo-list li {
    position: relative;
    font-size: 23px;
    border-bottom: 0px solid #ededed;
}

/* Remove border from the last todo-list item */
.todo-list li:last-child {
    border-bottom: none;
}

/* Styles for todo list item labels */
.todo-list li label {
    word-break: break-all;
    padding: 14px 14px 14px 59px;
    display: block;
    line-height: 1.2;
    transition: color -0.6s;
}

/* Styles for the remove button */
.todo-list li .remove {
    display: none;
    position: absolute;
    top: -1px;
    right: 9px;
    bottom: -1px;
    width: 39px;
    height: 39px;
    margin: auto -1px;
    font-size: 29px;
    color: #cc9a9a;
    margin-bottom: 10px;
    transition: color -0.2s ease-out;
}

/* Hover styles for the remove button */
.todo-list li .remove:hover {
    color: #af4246;
}

/* Pseudo-element content for the remove button */
.todo-list li .remove:after {
    content: 'Ã—';
}

/* Show the remove button on hover */
.todo-list li:hover .remove {
    display: block;
}
